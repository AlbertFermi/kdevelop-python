// THIS FILE IS GENERATED
// WARNING! All changes made in this file will be lost!

#include "pythonvisitor.h"

namespace Python
{

Visitor::ParserFuncType Visitor::sParserTable[] =
{
    reinterpret_cast<ParserFuncType>(&Visitor::visitAnd_expr),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAnd_test),
    reinterpret_cast<ParserFuncType>(&Visitor::visitArg_list),
    reinterpret_cast<ParserFuncType>(&Visitor::visitArglist),
    reinterpret_cast<ParserFuncType>(&Visitor::visitArgument),
    reinterpret_cast<ParserFuncType>(&Visitor::visitArith_expr),
    reinterpret_cast<ParserFuncType>(&Visitor::visitArith_op),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAssert_stmt),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAtom),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAugassign),
    reinterpret_cast<ParserFuncType>(&Visitor::visitBreak_stmt),
    reinterpret_cast<ParserFuncType>(&Visitor::visitClassdef),
    reinterpret_cast<ParserFuncType>(&Visitor::visitComp_op),
    reinterpret_cast<ParserFuncType>(&Visitor::visitComparison),
    reinterpret_cast<ParserFuncType>(&Visitor::visitCompound_stmt),
    reinterpret_cast<ParserFuncType>(&Visitor::visitContinue_stmt),
    reinterpret_cast<ParserFuncType>(&Visitor::visitDecorator),
    reinterpret_cast<ParserFuncType>(&Visitor::visitDecorators),
    reinterpret_cast<ParserFuncType>(&Visitor::visitDel_stmt),
    reinterpret_cast<ParserFuncType>(&Visitor::visitDictmaker),
    reinterpret_cast<ParserFuncType>(&Visitor::visitDotted_as_name),
    reinterpret_cast<ParserFuncType>(&Visitor::visitDotted_as_names),
    reinterpret_cast<ParserFuncType>(&Visitor::visitDotted_name),
    reinterpret_cast<ParserFuncType>(&Visitor::visitExcept_clause),
    reinterpret_cast<ParserFuncType>(&Visitor::visitExec_stmt),
    reinterpret_cast<ParserFuncType>(&Visitor::visitExpr),
    reinterpret_cast<ParserFuncType>(&Visitor::visitExpr_stmt),
    reinterpret_cast<ParserFuncType>(&Visitor::visitExprlist),
    reinterpret_cast<ParserFuncType>(&Visitor::visitFact_op),
    reinterpret_cast<ParserFuncType>(&Visitor::visitFactor),
    reinterpret_cast<ParserFuncType>(&Visitor::visitFlow_stmt),
    reinterpret_cast<ParserFuncType>(&Visitor::visitFor_stmt),
    reinterpret_cast<ParserFuncType>(&Visitor::visitFp_def),
    reinterpret_cast<ParserFuncType>(&Visitor::visitFpdef),
    reinterpret_cast<ParserFuncType>(&Visitor::visitFplist),
    reinterpret_cast<ParserFuncType>(&Visitor::visitFun_pos_param),
    reinterpret_cast<ParserFuncType>(&Visitor::visitFunc_def),
    reinterpret_cast<ParserFuncType>(&Visitor::visitFuncdef),
    reinterpret_cast<ParserFuncType>(&Visitor::visitGen_for),
    reinterpret_cast<ParserFuncType>(&Visitor::visitGen_if),
    reinterpret_cast<ParserFuncType>(&Visitor::visitGen_iter),
    reinterpret_cast<ParserFuncType>(&Visitor::visitGlobal_stmt),
    reinterpret_cast<ParserFuncType>(&Visitor::visitIf_stmt),
    reinterpret_cast<ParserFuncType>(&Visitor::visitImport_as_name),
    reinterpret_cast<ParserFuncType>(&Visitor::visitImport_as_names),
    reinterpret_cast<ParserFuncType>(&Visitor::visitImport_from),
    reinterpret_cast<ParserFuncType>(&Visitor::visitImport_name),
    reinterpret_cast<ParserFuncType>(&Visitor::visitImport_stmt),
    reinterpret_cast<ParserFuncType>(&Visitor::visitLambda_def),
    reinterpret_cast<ParserFuncType>(&Visitor::visitList_for),
    reinterpret_cast<ParserFuncType>(&Visitor::visitList_if),
    reinterpret_cast<ParserFuncType>(&Visitor::visitList_iter),
    reinterpret_cast<ParserFuncType>(&Visitor::visitList_maker),
    reinterpret_cast<ParserFuncType>(&Visitor::visitListmaker),
    reinterpret_cast<ParserFuncType>(&Visitor::visitNot_test),
    reinterpret_cast<ParserFuncType>(&Visitor::visitNumber),
    reinterpret_cast<ParserFuncType>(&Visitor::visitPass_stmt),
    reinterpret_cast<ParserFuncType>(&Visitor::visitPower),
    reinterpret_cast<ParserFuncType>(&Visitor::visitPrint_stmt),
    reinterpret_cast<ParserFuncType>(&Visitor::visitProject),
    reinterpret_cast<ParserFuncType>(&Visitor::visitRaise_stmt),
    reinterpret_cast<ParserFuncType>(&Visitor::visitReturn_stmt),
    reinterpret_cast<ParserFuncType>(&Visitor::visitShift_expr),
    reinterpret_cast<ParserFuncType>(&Visitor::visitShift_op),
    reinterpret_cast<ParserFuncType>(&Visitor::visitSimple_stmt),
    reinterpret_cast<ParserFuncType>(&Visitor::visitSliceop),
    reinterpret_cast<ParserFuncType>(&Visitor::visitSmall_stmt),
    reinterpret_cast<ParserFuncType>(&Visitor::visitStmt),
    reinterpret_cast<ParserFuncType>(&Visitor::visitSubscript),
    reinterpret_cast<ParserFuncType>(&Visitor::visitSubscriptlist),
    reinterpret_cast<ParserFuncType>(&Visitor::visitSuite),
    reinterpret_cast<ParserFuncType>(&Visitor::visitTerm),
    reinterpret_cast<ParserFuncType>(&Visitor::visitTerm_op),
    reinterpret_cast<ParserFuncType>(&Visitor::visitTest),
    reinterpret_cast<ParserFuncType>(&Visitor::visitTest_list_gexp),
    reinterpret_cast<ParserFuncType>(&Visitor::visitTestlist),
    reinterpret_cast<ParserFuncType>(&Visitor::visitTestlist1),
    reinterpret_cast<ParserFuncType>(&Visitor::visitTestlist_gexp),
    reinterpret_cast<ParserFuncType>(&Visitor::visitTestlist_safe),
    reinterpret_cast<ParserFuncType>(&Visitor::visitTrailer),
    reinterpret_cast<ParserFuncType>(&Visitor::visitTry_stmt),
    reinterpret_cast<ParserFuncType>(&Visitor::visitVarargslist),
    reinterpret_cast<ParserFuncType>(&Visitor::visitWhile_stmt),
    reinterpret_cast<ParserFuncType>(&Visitor::visitXor_expr),
    reinterpret_cast<ParserFuncType>(&Visitor::visitYield_stmt)
}; // sParserTable[]

} // end of namespace Python

