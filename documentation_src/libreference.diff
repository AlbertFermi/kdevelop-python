diff -r sourcefiles/bdb.txt sourcefiles_vanilla//bdb.txt
244c244
<    .. method:: set_break(filename, lineno[, temporary[, cond[, funcname]]])
---
>    .. method:: set_break(filename, lineno[, temporary=0[, cond[, funcname]]])
diff -r sourcefiles/constants.txt sourcefiles_vanilla//constants.txt
1,2d0
< .. module:: __builtin_constants__
< 
diff -r sourcefiles/csv.txt sourcefiles_vanilla//csv.txt
60c60
< .. function:: reader(csvfile[, dialect='excel'][, fmtparam=None])
---
> .. function:: reader(csvfile[, dialect='excel'][, fmtparam])
97c97
< .. function:: writer(csvfile[, dialect='excel'][, fmtparam=None])
---
> .. function:: writer(csvfile[, dialect='excel'][, fmtparam])
diff -r sourcefiles/functions.txt sourcefiles_vanilla//functions.txt
1c1,2
< .. module:: __builtin__
---
> 
> .. _built-in-funcs:
Nur in sourcefiles_vanilla/: intro.txt.
diff -r sourcefiles/msilib.txt sourcefiles_vanilla//msilib.txt
445c445
<    .. method:: event(event, argument[,  condition=1[, ordering=None]])
---
>    .. method:: event(event, argument[,  condition=1[, ordering]])
diff -r sourcefiles/multiprocessing.txt sourcefiles_vanilla//multiprocessing.txt
358c358
<    .. method:: is_alive()
---
>    .. method:: is_alive
923c923
< .. function:: Array(typecode_or_type, size_or_initializer, more, lock=True)
---
> .. function:: Array(typecode_or_type, size_or_initializer, *, lock=True)
1523a1524,1531
> 
>    .. method:: __repr__
> 
>       Return a representation of the proxy object.
> 
>    .. method:: __str__
> 
>       Return the representation of the referent.
diff -r sourcefiles/optparse.txt sourcefiles_vanilla//optparse.txt
262c262
<                      attr, ...)
---
>                      attr=value, ...)
896c896
< .. method:: OptionParser.add_option(opt_str, more, attr, more2)
---
> .. method:: OptionParser.add_option(opt_str[, ...], attr=value, ...)
1499c1499
< .. method:: OptionParser.set_defaults(dest=value, more=dict())
---
> .. method:: OptionParser.set_defaults(dest=value, ...)
diff -r sourcefiles/os.txt sourcefiles_vanilla//os.txt
1157c1157
< .. function:: mknod(filename[, mode=0600, device=None])
---
> .. function:: mknod(filename[, mode=0600, device])
diff -r sourcefiles/smtplib.txt sourcefiles_vanilla//smtplib.txt
160c160
< .. method:: SMTP.docmd(cmd, [argstring])
---
> .. method:: SMTP.docmd(cmd, [, argstring])
diff -r sourcefiles/sqlite3.txt sourcefiles_vanilla//sqlite3.txt
594c594
<    .. method:: keys()
---
>    .. method:: keys
diff -r sourcefiles/ssl.txt sourcefiles_vanilla//ssl.txt
53c53
< .. function:: wrap_socket (sock, keyfile=None, certfile=None, server_side=False, cert_reqs=CERT_NONE, ssl_version=None, ca_certs=None, do_handshake_on_connect=True, suppress_ragged_eofs=True, ciphers=None)
---
> .. function:: wrap_socket (sock, keyfile=None, certfile=None, server_side=False, cert_reqs=CERT_NONE, ssl_version={see docs}, ca_certs=None, do_handshake_on_connect=True, suppress_ragged_eofs=True, ciphers=None)
diff -r sourcefiles/stdtypes.txt sourcefiles_vanilla//stdtypes.txt
2c2
< .. module:: __builtin_types__
---
> 
diff -r sourcefiles/sys.txt sourcefiles_vanilla//sys.txt
947a948,949
>           stdout
>           stderr
949,977c951,953
<    File objects corresponding to the interpreter's standard input, output and error
<    streams.  ``stdin`` is used for all interpreter input except for scripts but
<    including calls to :func:`input` and :func:`raw_input`.  ``stdout`` is used for
<    the output of :keyword:`print` and :term:`expression` statements and for the
<    prompts of :func:`input` and :func:`raw_input`. The interpreter's own prompts
<    and (almost all of) its error messages go to ``stderr``.  ``stdout`` and
<    ``stderr`` needn't be built-in file objects: any object is acceptable as long
<    as it has a :meth:`write` method that takes a string argument.  (Changing these
<    objects doesn't affect the standard I/O streams of processes executed by
<    :func:`os.popen`, :func:`os.system` or the :func:`exec\*` family of functions in
<    the :mod:`os` module.)
< 
< 
< .. data:: stdout
< 
<    File objects corresponding to the interpreter's standard input, output and error
<    streams.  ``stdin`` is used for all interpreter input except for scripts but
<    including calls to :func:`input` and :func:`raw_input`.  ``stdout`` is used for
<    the output of :keyword:`print` and :term:`expression` statements and for the
<    prompts of :func:`input` and :func:`raw_input`. The interpreter's own prompts
<    and (almost all of) its error messages go to ``stderr``.  ``stdout`` and
<    ``stderr`` needn't be built-in file objects: any object is acceptable as long
<    as it has a :meth:`write` method that takes a string argument.  (Changing these
<    objects doesn't affect the standard I/O streams of processes executed by
<    :func:`os.popen`, :func:`os.system` or the :func:`exec\*` family of functions in
<    the :mod:`os` module.)
< 
< 
< .. data:: stderr
---
>    .. index::
>       builtin: input
>       builtin: raw_input
diff -r sourcefiles/tarfile.txt sourcefiles_vanilla//tarfile.txt
38c38
< .. function:: open(name=None, mode='r', fileobj=None, bufsize=10240, kwargs=None)
---
> .. function:: open(name=None, mode='r', fileobj=None, bufsize=10240, \*\*kwargs)
diff -r sourcefiles/ttk.txt sourcefiles_vanilla//ttk.txt
268c268
<    .. method:: instate(statespec[, callback[, *args[, kw=dict()]]])
---
>    .. method:: instate(statespec[, callback=None[, *args[, **kw]]])
469c469
<    .. method:: add(child, kw=dict())
---
>    .. method:: add(child, **kw)
526c526
<    .. method:: tab(tab_id[, option=None[, kw=None]])
---
>    .. method:: tab(tab_id[, option=None[, **kw]])
876c876
<    .. method:: column(column[, option=None[, kw=dict()]])
---
>    .. method:: column(column[, option=None[, **kw]])
931c931
<    .. method:: heading(column[, option=None[, kw=dict()]])
---
>    .. method:: heading(column[, option=None[, **kw]])
1004c1004
<    .. method:: insert(parent, index[, iid=None[, kw=dict()]])
---
>    .. method:: insert(parent, index[, iid=None[, **kw]])
1021c1021
<    .. method:: item(item[, option[, kw=dict()]])
---
>    .. method:: item(item[, option[, **kw]])
1114c1114
<    .. method:: tag_configure(tagname[, option=None[, kw=dict()]])
---
>    .. method:: tag_configure(tagname[, option=None[, **kw]])
1166c1166
<    .. method:: configure(style, query_opt=None, kw=dict())
---
>    .. method:: configure(style, query_opt=None, **kw)
1190c1190
<    .. method:: map(style, query_opt=None, kw=dict())
---
>    .. method:: map(style, query_opt=None, **kw)
1273c1273
<    .. method:: element_create(elementname, etype, args=[], kw=dict())
---
>    .. method:: element_create(elementname, etype, *args, **kw)
diff -r sourcefiles/turtle.txt sourcefiles_vanilla//turtle.txt
472c472
< .. function:: dot(size=None, color=None)
---
> .. function:: dot(size=None, *color)
779c779
< .. function:: pen(pen=None, pendict=dict())
---
> .. function:: pen(pen=None, **pendict)
1839c1839
< .. function:: setup(width=_CFG_width, height=_CFG_height, startx=_CFG_leftright, starty=_CFG_topbottom)
---
> .. function:: setup(width=_CFG["width"], height=_CFG["height"], startx=_CFG["leftright"], starty=_CFG["topbottom"])
diff -r sourcefiles/xml.etree.elementtree.txt sourcefiles_vanilla//xml.etree.elementtree.txt
142c142
< .. function:: SubElement(parent, tag, attrib, **extra)
---
> .. function:: SubElement(parent, tag, attrib={}, **extra)
